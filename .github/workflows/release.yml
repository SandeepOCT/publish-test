name: Semantic Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release Type (stable or alpha)'
        required: true
        default: 'stable'



jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Get the current version from package.json
      - name: Get current version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Current Version: $VERSION"

          echo "current_version=$VERSION" >> $GITHUB_OUTPUT
          echo "current_alpha_branch=${VERSION}-alpha" >> $GITHUB_OUTPUT

      # Checkout or create version branch for alpha release
      - name: Checkout or create version branch for alpha release
        run: |
          VERSION="${{ steps.version.outputs.current_version }}"
          ALPHA_BRANCH="${{ steps.version.outputs.current_alpha_branch }}"

          if [[ "${{ github.event.inputs.release_type }}" == "alpha" ]]; then
            # Fetch all branches
            git fetch origin

            # Clean any unstaged changes (stash if necessary)
            git reset --hard

            # Checkout or create the alpha branch
            git checkout "$ALPHA_BRANCH" || git checkout -b "$ALPHA_BRANCH"
            
            # Rebase with main
            git rebase main -f

            # Push the branch after rebase
            git push origin "$ALPHA_BRANCH" --force
            echo "Alpha branch $ALPHA_BRANCH checked out and rebased with main."
          fi

      # Run Semantic Release
      - name: Run Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          if [[ "${{ github.event.inputs.release_type }}" == "alpha" ]]; then
            git checkout "${{ steps.version.outputs.current_alpha_branch }}"
            npx semantic-release --branches "alpha"
          else
            git checkout main
            npx semantic-release --branches "main"
          fi

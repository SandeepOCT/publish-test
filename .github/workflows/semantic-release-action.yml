on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:

name: semantic release action

jobs:
  release-please:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: write
      packages: write

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # - name: Configure Git
      #   run: |
      #     git config user.name ${{ env.GIT_AUTHOR_NAME }}
      #     git config user.email ${{ env.GIT_AUTHOR_EMAIL }}

      - name: Setup .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc

      - name: Semantic Release Action
        # You may pin to the exact commit or the version.
        # uses: codfish/semantic-release-action@cbd853afe12037afb1306caca9d6b1ab6a58cf2a
        # uses: codfish/semantic-release-action@v3# Recommended: Docker image digest from GitHub Container Registry (best for speed & security)
        uses: docker://ghcr.io/codfish/semantic-release-action@sha256:4c0955361cf42e5ab9bb05df3a1e2a781c443f9760b63a68957689445051a2fb

        with:
          # The branches on which releases should happen. https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#branches
          # branches: # optional
          # List of modules or file paths containing . https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#extends
          # extends: # optional
          # Define the list of plugins to use. Plugins will run in series, in the order defined, for each steps if they implement it. https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#plugins
          additional-packages: |
            ['conventional-changelog-conventionalcommits@6', '@semantic-release/changelog', '@semantic-release/git']
          # plugins: |
          #   ['@semantic-release/git']
          # conventional-changelog-conventionalcommits@7
          # Define a list of additional plugins or shareable configurations (official or community) to install. Use this if you 1) use any plugins other than commit-analyzer, release-notes-generator, github, or npm, which are already installed along with semantic-release or 2) want to extend from a shareable configuration. https://semantic-release.gitbook.io/semantic-release/extending/plugins-list
          # additional_packages: |
          #   ["@semantic-release/commit-analyzer", "conventional-changelog-conventionalcommits@7"]
          # additional_packages: conventional-changelog-conventionalcommits@7
          # The objective of the dry-run mode is to get a preview of the pending release. Dry-run mode skips the following steps: prepare, publish, success and fail. https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#dryrun
          # dry_run: # optional
          # The git repository URL. https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#repositoryurl
          # repository_url: # optional
          # The Git tag format used by semantic-release to identify releases. https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#tagformat
          # tag_format: # optional
          # DEPRECATED. Will continue to be supported for v1. Use `branches` instead. Previously used in semantic-release v15 to set a single branch on which releases should happen. https://github.com/semantic-release/semantic-release/blob/master/docs/usage/configuration.md#branches
          # branch: # optional

           # additional_packages: |
           #   ['conventional-changelog-conventionalcommits@6']
           # plugins: |
           #   [
           #     [
           #       "@semantic-release/commit-analyzer",
           #       {
           #         "preset": "conventionalcommits"
           #       }
           #     ],
           #     [
           #       "@semantic-release/release-notes-generator",
           #       {
           #         "preset": "conventionalcommits",
           #         "presetConfig": {
           #           "types": [
           #             { type: 'feat', section: 'Features', hidden: false },
           #             { type: 'fix', section: 'Bug Fixes', hidden: false },
           #             { type: 'perf', section: 'Performance Improvements', hidden: false },
           #             { type: 'revert', section: 'Reverts', hidden: false },
           #             { type: 'docs', section: 'Other Updates', hidden: false },
           #             { type: 'style', section: 'Other Updates', hidden: false },
           #             { type: 'chore', section: 'Other Updates', hidden: false },
           #             { type: 'refactor', section: 'Other Updates', hidden: false },
           #             { type: 'test', section: 'Other Updates', hidden: false },
           #             { type: 'build', section: 'Other Updates', hidden: false },
           #             { type: 'ci', section: 'Other Updates', hidden: false }
           #           ]
           #         }
           #       }
           #     ],
           #     '@semantic-release/github'
           #   ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # This is used to set the author and committer information for semantic release commits
          # If environment variables are not set, committer will be in the name of Semantic Release Bot instead of the GitHub Actions bot
          GIT_AUTHOR_NAME: "sbot"
          GIT_AUTHOR_EMAIL: "sbot@ta.com"
          GIT_COMMITTER_NAME: "sbot"
          GIT_COMMITTER_EMAIL: "sbot@ta.com"

      - name: Print 
        continue-on-error: true
        run: echo ${{ steps.semantic.outputs.release-version }}

      - name: Print env
        continue-on-error: true
        run: printenv
